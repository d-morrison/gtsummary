% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tbl_filter.R
\name{tbl_filter}
\alias{tbl_filter}
\alias{tbl_filter.tbl_hierarchical}
\title{Filter Hierarchical Tables}
\usage{
tbl_filter(x, ...)

\method{tbl_filter}{tbl_hierarchical}(x, filter, ...)
}
\arguments{
\item{x}{(\code{tbl_hierarchical}, \code{tbl_hierarchical_count})\cr
A hierarchical gtsummary table of class \code{'tbl_hierarchical'} or \code{'tbl_hierarchical_count'}.}

\item{...}{These dots are for future extensions and must be empty.}
}
\value{
A \code{gtsummary} of the same class as \code{x}.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}\cr

This function is used to filter hierarchical table rows.
}
\details{
The \code{filter} argument can be used to filter out rows of a table which do not meet the criteria provided as an
expression. Rows can be filtered on the values of any of the possible statistics (\code{n}, \code{p}, and \code{N}) provided they
are included at least once in the table, as well as the values of any \code{by} variables. Filtering is only applied to
rows that correspond to the innermost variable in the hierarchy - all outer variable (summary) rows preceding at
least one inner row that meets the filtering criteria are kept regardless of whether they meet the filtering criteria
themselves. In addition to filtering on individual statistic values, filters can be applied across the row (i.e.
across all \code{by} variable values) by using aggregate functions such as \code{sum()} and \code{mean()}.

Some examples of possible filters:
\itemize{
\item \code{filter = n > 5}
\item \code{filter = n == 2 & p < 0.05}
\item \code{filter = sum(n) > 4}
\item \code{filter = mean(n) > 4 | n > 3}
\item \code{filter = any(n > 2 & TRTA == "Xanomeline High Dose")}
}
}
\examples{
\dontshow{if ((identical(Sys.getenv("NOT_CRAN"), "true") || identical(Sys.getenv("IN_PKGDOWN"), "true"))) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
ADAE_subset <- cards::ADAE |>
  dplyr::filter(AETERM \%in\% unique(cards::ADAE$AETERM)[1:5])

tbl <- tbl_hierarchical(
  data = ADAE_subset,
  variables = c(SEX, RACE, AETERM),
  by = TRTA,
  denominator = cards::ADSL |> mutate(TRTA = ARM),
  id = USUBJID,
  overall_row = TRUE
)

# Example 1 - Row Sums > 10 ------------------
tbl_filter(tbl, sum(n) > 10)

# Example 2 - Row Sums <= 5 ------------------
tbl_filter(tbl, sum(n) <= 5)
\dontshow{\}) # examplesIf}
}
\seealso{
\code{\link[=tbl_sort]{tbl_sort()}}
}
